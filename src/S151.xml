<?xml version="1.0" encoding="UTF-8" ?>
<section xml:id="s-cyclic-groups">
<title>Cyclic Groups</title>

<p>Groups are classified according to their size and structure. A group's structure is revealed by a study of its subgroups and other properties (e.g., whether it is abelian) that might give an overview of it. Cyclic groups have the simplest structure of all groups.</p>

<definition xml:id="def-cyclic-group"><title>Cyclic Group</title>
<index><main>Cyclic Group</main></index>
<notation><usage></usage><description></description></notation>
<statement><p>Group \(G\) is cyclic if there exists \(a \in  G\) such that the cyclic subgroup generated by a, \(\langle a \rangle\),
equals all of \(G\). That is, \(G = \{n a |n \in  \mathbb{Z}\}\), in which case a is called a generator of \(G\). The reader should note that additive notation is used for \(G\).</p></statement></definition>
<example xml:id="ex-a-finite-cyclic-group"><title>A Finite Cyclic Group</title><p>\(\mathbb{Z}_{12} = [\mathbb{Z}_{12} , +_{12} ]\),  where \(+_{12}\) is addition modulo 12, is a cyclic group.
To verify this statement, all we need to do is demonstrate that some element of \(\mathbb{Z}_{12}\)  is a generator. One such element is 5; that is, \(\langle 5 \rangle = \mathbb{Z}_{12}\) . One more obvious generator is 1. In fact, 1 is a generator of every \([\mathbb{Z}_n; +_n]\). The reader is asked to prove that if an element is a generator, then its inverse is also a generator. Thus, -5 = 7 and -1 = 11 are the other generators of \(\mathbb{Z}_{12}\). The remaining eight elements of the group are not generators.</p>

           <figure xml:id="fig-string-art">
                <caption>Examples of <q>string art</q>
                </caption>
                <image width="70%" source="images/fig-string-art.png">
                    <description>Examples of <q>string art</q></description>
                </image>
            </figure>

<p><xref ref="fig-string-art" autoname="yes" />(a)  is an example of <q>string art</q> that illustrates how 5 generates \(\mathbb{Z}_{12}\). Twelve tacks are placed evenly around a circle and numbered 0 through 11. A string is tied to tack 0, and is then looped around every fifth tack. As a result, the numbers of the tacks that are reached are
exactly the ordered multiples of 5 modulo 12: 5, 10, 3, ... , 7, 0.  Note that if every seventh tack were used, the same artwork would be produced.
If every third tack were connected, as in <xref ref="fig-string-art" autoname="yes" />(b), the resulting loop would only use four tacks; thus 3 does not generate \(\mathbb{Z}_{12}\)</p>
</example> 

<example xml:id="ex-integers-are-cyclic"><title>The Group of Integers is Cyclic</title><p>The additive group of integers, [<m>\mathbb{ZQ}</m>; +], is cyclic:

\[\mathbb{Z} = \langle 1 \rangle = \{n\cdot 1 |n \in  \mathbb{Z}\}\]

This observation does not mean that every integer is the product of an integer times 1. It means that
\[\mathbb{Z} = \{0\} \cup \left\{\left.\overbrace{1+1+\cdots +1}^{n \textrm{ terms}} \rvert n\in \mathbb{P}\right\}\cup \left\{\left.\overbrace{(-1)+(-1)+\cdots
+(-1)}^{n \textrm{ terms}} \rvertn \in \mathbb{P}\right\}\]
</p></example> 

<theorem xml:id="cyclic-implies-abelian"><title>Cyclic \(Rightarrow\) Abelian</title><index><main>15.1.1.</main></index><statement><p>If \([G *]\) is cyclic, then it is abelian.</p></statement><proof><p>Let <m>a</m> be any generator of <m>G</m> and let \(b, c \in  G\). By the definition of the generator of a group, there exists integers <m>m</m> and <m>n</m> such that \(b = m a\) and \(c = n a\). Thus
<me>\begin{split}
b*c &amp;= (m a)*(n a)\\
	&amp;= (m + n)a  \quad \textrm{   by <xref ref="theorem-11-3-expo-properties" autoname="yes" />}\\
	&amp;= (n + m)a \\
	&amp;= (n a)*(m a)\quad \textrm{  again by <xref ref="theorem-11-3-expo-properties" autoname="yes" />}\\
	&amp;=  c*b\\
\end{split}
</me>
</p></proof></theorem> 

<p>One of the first steps in proving a property of cyclic groups is to use the fact that there exists a generator. Then every element of the group can be expressed as some multiple of the generator. Take special note of how this is used in theorems of this section.</p>
<p>Up to now we have used only additive notation to discuss cyclic groups. Theorem 15.1.1 actually justifies this practice since it is customary to
use additive notation when discussing abelian groups. Of course, some concrete groups for which we employ multiplicative notation are cyclic. If
one of its elements, <m>a</m>, is a generator,
 \[\langle a \rangle = \left\{\left.a^n\rvert n \in  \mathbb{Z}\right\}\]
 </p>
<example xml:id="ex-cyclic-multiplicative"><title>A Cyclic Multiplicative Group</title><p>The group of positive integers modulo 11 with modulo 11 multiplication, \([\mathbb{Z}_{11}^* ;\times_{11}]\),
is cyclic. One of its generators is 6:  \(6^1 = 6\), \(6^2 = 3\), \(6^3= 7\),\(\ldots\) , \(6^9=2\), and \(6^{10}=1\), the identity of the group.</p></example> 

<example xml:id="ex-non-cyclic-group"><title>A Non-cyclic Group</title><p>The real numbers with addition, \([\mathbb{R};+]\) is a noncyclic group. The proof of this statement requires a bit more generality
since we are saying that for all  \(r \in  \mathbb{R}\), \(\langle r \rangle\) is a proper subset of <m>\mathbb{R}</m>. If <m>r</m> is nonzero, the multiples of
<m>r</m> are distributed over the real line, as in <xref ref="fig-real-line" autoname="yes" />. It is clear then that there are many real numbers, like \(r/2\), that are not
in \(\langle r \rangle\).</p>
			<figure xml:id="fig-real-line">
                <caption>Elements of \( \langle r \rangle, r &gt; 0\)
                </caption>
                <image width="70%" source="images/fig-real-line.png">
                    <description>Elements of the cylic subgroup generated by a real number</description>
                </image>
            </figure>
</example>
<p>The next two proofs  make use of the <xref ref="th-division-property" autoname="yes" />.</p>
<p>The following theorem shows that a cyclic group can never be very complicated.</p>

<theorem xml:id="theorem-cyclic-groups"><title>Possible Cyclic Group Strutures</title>
<statement>If <m>G</m> is a cyclic group, then <m>G</m> is either finite or countably infinite. If \(G\) is finite and \(\lvert G\rvert=n\), it is isomorphic to \([\mathbb{Z}_n, +_n]\). If <m>G</m> is infinite, it is isomorphic to \([\mathbb{Z}, +]\).</statement>
<proof><p>Case 1: \(\lvert G\rvert &lt; \infty\). If <m>a</m> is a generator of <m>G</m> and \(\lvert G\rvert =n\), define\(\phi:\mathbb{Z}_n \to  G\) by \(\phi(k) = k a\) for all \(k \in \mathbb{Z}_n\).</p>

<p>Since \(\langle a \rangle\) is finite, we can use the fact that the elements of \(\langle a \rangle\) are the first <m>n</m> nonnegative multiples of <m>a</m>. From this
observation, we see that \(\phi\) is a surjection. A surjection between finite sets of the same cardinality must be a bijection. Finally, if \(p,q \in  \mathbb{Z}_n\),

\[\begin{split}
\phi(p)+\phi(q) &amp;= p a + q a\\
	&amp;= (p+q)a \\
	&amp;= (p +_n q)a \quad \textrm{     see exercise 10}\\
	&amp; = \phi(p +_n q)\\ 
\end{split}
\]
Therefore \(\phi\) is an isomorphism.</p>
<p>Case 2; \(\lvert G\rvert =\infty\). We will leave this case as an exercise.</p>
</proof></theorem> 


<theorem xml:id="theorem-subgroups-of-cyclic-groups"><title>Subgroups of Cyclic Groups</title>
<statement><p>Every subgroup of a cyclic group is cyclic.</p></statement>
<proof><p>Let <m>G</m> be cyclic with generator <m>a</m> and let \(H \leq  G\). If \(H = \{e\}\), <m>H</m> has <m>e</m> as a generator.  We may now assume that \(\lvert H\rvert \geq 2\) and \(a \neq  e\). Let \(m\) be the least positive integer such that \(m a\) belongs to \(H\). This is the key step. It lets us get our hands on a generator of <m>H</m>. We will now show that \(c= m a\) generates <m>H</m>.  Suppose
that \(\langle c \rangle \neq  H\). Then there exists \(b \in  H\) such that \(b \notin  \langle c \rangle\). Now, since <m>b</m> is in <m>G</m>, there exists \(n \in
 \mathbb{Z}\) such that \(b = n a\). We now apply the division property and divide <m>n</m> by <m>m</m>. 
\(b = n a = (q m+r)a = (q m)a+r a\), where \(0\leq r<m\).  We note that <m>r</m> cannot be zero for otherwise we would have  \(b = n a = q(m a) = q c \in  \langle c \rangle\).   Therefore, \(r a = n a - (q m) a \in  H\).  This contradicts our choice of <m>m</m> because \(0 < r < m\).</p></proof></theorem> 


<example xml:id="ex-subgroups-of-z10"><title>All subgroups of \(\mathbb{Z}_{10}\)</title><p>The only proper subgroups of \(\mathbb{Z}_{10}\) are \(H_1 = \{0, 5\}\) and \(H_2 = \{0, 2, 4, 6, 8\}\).  They are both cyclic:
\(H_1= \langle 5 \rangle\), while \(H_2 = \langle 2 \rangle = \langle 4 \rangle = \langle 6 \rangle = \langle 8 \rangle\). The generators of \(\mathbb{Z}_{10}\) are 1, 3, 7, and 9.</p></example>

<example xml:id="ex-subgroups-of-z"><title>All subgroups of \(\mathbb{Z}\)</title><p>With the exception of \(\{0\}\), all subgroups of <m>\mathbb{ZQ}</m> are isomorphic to <m>\mathbb{ZQ}</m>.  If \(H \leq  \mathbb{Z}\), then
<m>H</m> is the cyclic subgroup generated by the least positive element of <m>H</m>.  It is infinite and so by <xref ref="theorem-subgroups-of-cyclic-groups" autoname="yes" /> it is isomorphic to \(\mathbb{Z}\).</p></example>
 

<p>We now cite a useful theorem for computing the order of cyclic subgroups of a cyclic group:</p>

<theorem xml:id="theorem-order-in-cyclic"><title>The order of elements of a finite cyclic group</title><index><main>Order</main><sub>of elements of a finite cyclic group</index><statement><p>If <m>G</m> is a cyclic group of order <m>n</m> and <m>a</m> is a generator of <m>G</m>, the order of \(k a\) is \(n/d\), where <m>d</m> is the greatest common divisor of <m>n</m> and <m>k</m>.</p></statement>
<proof><p>The proof of this theorem is left to the reader.</p></proof></theorem> 

<example xml:id="ex-order-of-element-cyclic"><title>Computation of an order in a cyclic group</title><p>To compute the order of \(\langle 18 \rangle\) in \(\mathbb{Z}_{30}\), we first observe that 1 is a generator of \(\mathbb{Z}_{30}\)  and \(18= 18(1)\). The greatest common divisor of 18 and 30 is 6. Hence, the order of \(\langle 18 \rangle\) is 30/6, or 5.</p></example>




<p>At this point, we will introduce the idea of a fast adder, a relatively modern application (Winograd, 1965) to an ancient theorem, the Chinese Remainder Theorem. We will present only an overview of the theory and rely primarily on examples. The interested reader can refer to Dornhoff and Hohn for details.</p>



<p>Out of necessity, integer addition with a computer is addition modulo <m>n</m>, for <m>n</m> some larger number. Consider the case where \(n\) is small, like 64. Then addition involves the addition of six-digit binary numbers. Consider the process of adding 31 and 1. Assume the computer{'}s
adder takes as input two bit strings  \(a = \left\{a_0,a_1,a_2,a_3,a_4,a_5\right\}\) and \(b=\left\{b_0,b_1,b_2,b_3,b_4,b_5\right\}\) and outputs
\(s = \left\{s_0,s_1,s_2,s_3,s_4,s_5\right\}\), the sum of a and b. Then, if \(a = 31 = (1, 1, 1, 1, 1, 0)\) and \(b = 1 = (1, 0, 0, 0, 0, 0)\),
<m>s</m> will be (0, 0, 0, 0, 0, 1), or 32. The output \(s_{ }=1\) cannot be determined until all other outputs have been determined. If addition is done with a finite-state machine, as in Example 14.3.5, the time required to get <m>s</m> will be six time units, where one time unit is the time it takes to get one output from the machine.  In general, the time required to obtain <m>s</m> will be proportional to the number of bits   Theoretically, this time can be decreased, but the explanation would require a long digression and our relative results would not change that much. We will use the rule that the number of time units needed to perform addition modulo <m>n</m> is proportional to  \(\left\lceil \log_2n\right\rceil\).</p>


<p>Now we will introduce a hypothetical problem that we will use to illustrate the idea of a fast adder. Suppose that we had to add many numbers modulo \(27720 = 8\cdot  9 \cdot \text 5 \cdot \text 7\cdot \text 11\). By the rule above, since \(2^{14} < 27720 < 2^{15}\), each addition would take 15 time units. If the sum is initialized to zero, 1,000 additions would be needed; thus, 15,000 time units would be needed to do the additions. We can improve this time dramatically by applying the Chinese Remainder Theorem.</p>

<theorem xml:id="th-crt"><title>Chinese Remainder Theorem (CRT)</title>
<index><main>Chinese Remainder Theorem</main></index>
<index><main>CRT</main></index>
<statement><p>Let \(n_1\), \(n_2\), \(\ldots\), \(n_p\) be integers that have no common factor greater than one between
any pair of them; i. e., they are relatively prime.  Let \(n = n_1n_2\cdots  n_p\). Define
\[\theta:\mathbb{Z}_n\to  \mathbb{Z}_{n_1}\times \mathbb{Z}_{n_2}\times  \cdots \times \mathbb{Z}_{n_p}\\
by   
\[\theta(k) = \left(k_1, k_2, \ldots , k_p\right)\]
where for \(1\leq i\leq p\),   \(0\leq k_i &lt n_i\)   and  \(k\equiv k_i\left(\textrm{ mod} n_i\right)\).  Then \(\theta\) is an isomorphism from \(\mathbb{Z}_n\) into \(\mathbb{Z}_{n_1}\times \mathbb{Z}_{n_2}\times  \cdots \times \mathbb{Z}_{n_p}\).</p></statement></theorem>

<p>The Chinese Remainder Theorem can be stated in several different forms, and its proof can be found in many abstract algebra texts.</p>

<p>As we saw in Chapter 11, \(\mathbb{Z}_6\) is isomorphic to \(\mathbb{Z}_2 \times  \mathbb{Z}_3\) . This is the smallest case to which the CRT can be applied. An isomorphism between \(\mathbb{Z}_6\) and \(\mathbb{Z}_2 \times  \mathbb{Z}_3\) is
<me>\begin{array}{cc}
\theta(0) = (0,0) &amp; \theta(3) = (1,0)\\
\theta(1) = (1, 1) &amp; \theta(4) = (0, 1)\\ 
\theta(2) = (0, 2) &amp; \theta(5) = (1,2)\\
\end{array}
</me></p>

<p>Let's consider a somewhat larger case.  We start by selecting a modulus that can be factored into a product of relatively prime integers: \(n=21,600=2^5 3^3 5^2}\).  In this case the factors are \(2^5=32\), \(3^3=27\), and \(5^2=25\).  They need not be powers of primes, but it is easy to break the factors into
this form to assure relatively prime numbers.  To add in \(\mathbb{Z}_n\), we need \(\left\lceil \log _2n\right\rceil =15\) time units.  Let \(G=\mathbb{Z}_{32}\times \mathbb{Z}_{27}\times \mathbb{Z}_{25}\).   The CRT gives us an isomorphism between \(\mathbb{Z}_{21600}\) and \(G\). The basic idea behind the fast adder, illustrated in Figure 15.1.3, is to make use of this isomorphism. 

<figure></figure>

<p>Assume we have several integers \(a_1, \ldots , a_m\) to be added.  Here, we assume \(m= 20\).
</p>
<sage>
<input>
a=[1878,1384,84,2021,784,1509,1740,1201,2363,1774,1865,33,1477,894,690,520,198,1349,1278,650]
</input>
</sage>

<p>After sums \(s_i's\), \(1 &lte; i &lte; m\), are initialized to zero, each summand \(t\) is decomposed into a triple \(\theta(t)=\left(t_1,t_2,t_3\right)\in G\).  For our example we first define \(\theta\) as a Sage function and then map it over the list of summands.</p>

\begin{doublespace}
\noindent\(\pmb{\theta[\textrm{ n$\_$}]\textrm{ :=}\{\textrm{ Mod}[n,32],\textrm{ Mod}[n,27],\textrm{ Mod}[n,25]\}}\)
\end{doublespace}

\begin{doublespace}
\noindent\(\pmb{\textrm{ distributedSummands}=\textrm{ Map}[\theta,a]}\)
\end{doublespace}

\begin{doublespace}
\noindent\(\left(
\begin{array}{ccc}
 22 &amp; 15 &amp; 3 \\
 8 &amp; 7 &amp; 9 \\
 20 &amp; 3 &amp; 9 \\
 5 &amp; 23 &amp; 21 \\
 16 &amp; 1 &amp; 9 \\
 5 &amp; 24 &amp; 9 \\
 12 &amp; 12 &amp; 15 \\
 17 &amp; 13 &amp; 1 \\
 27 &amp; 14 &amp; 13 \\
 14 &amp; 19 &amp; 24 \\
 9 &amp; 2 &amp; 15 \\
 1 &amp; 6 &amp; 8 \\
 5 &amp; 19 &amp; 2 \\
 30 &amp; 3 &amp; 19 \\
 18 &amp; 15 &amp; 15 \\
 8 &amp; 7 &amp; 20 \\
 6 &amp; 9 &amp; 23 \\
 5 &amp; 26 &amp; 24 \\
 30 &amp; 9 &amp; 3 \\
 10 &amp; 2 &amp; 0 \\
\end{array}
\right)\)
\end{doublespace}



 Addition in <m>G</m> can be done in parallel so that each new subtotal in the form of the triple \(\left(s_1,s_2, s _3 \right)\)  takes only
as long to compute as it takes to add in the largest modulus, \(\log _232=5\) time units, if calculations are done in parallel. By the time rule
that we have established, the addition of 20 numbers can be done in \(20\ 5= 100\) time units, as opposed to \(15\times 20=300\) time units if we
do the calculations in \(\mathbb{Z}_n\).



The result of adding the distributed summands in the three different moduli for our example would be the following.

\begin{doublespace}
\noindent\(\pmb{\textrm{ distributedSum}=}\\
\pmb{\textrm{ Fold}[\{\textrm{ Mod}[\textrm{ $\#$1}[[1]]+\textrm{ $\#$2}[[1]],32],\textrm{ Mod}[\textrm{ $\#$1}[[2]]+\textrm{ $\#$2}[[2]],27],}\\
\pmb{\textrm{ Mod}[\textrm{ $\#$1}[[3]]+\textrm{ $\#$2}[[3]],25]\}\&amp;,\{0,0,0\},\textrm{ distributedSummands}]}\)
\end{doublespace}

\begin{doublespace}
\noindent\(\{12,13,17\}\)
\end{doublespace}



Two more factors must still be considered, however. How easy is it to determine \(\theta(a)\) and \(\theta^{-1}\left(s_1,s_2,s_3\right)\)? We must
compute \(\theta(a)\)  twenty times, and, if it requires a sizable amount of time, there may not be any advantage to the fast adder. The computation
of an inverse is not as time-critical since it must be done only once, after the final sums are determined in <m>G</m>.



The determination of \(\theta(a)\) is not a major problem. If the values of \(\theta(1)\), \(\theta(10)\), \(\theta(100)\), \(\theta(1000)\),
and \(\theta(10000)\) are stored, \(a = d_0 +10d_1+ 100d_2+1000d_3+10000d_4\), then



 \(\theta(a)=d_0\theta(1)+d_1\theta(10)+d_2\theta(100)+ d_3\theta(1000)+d_4\theta(10000)\)



by the fact that \(\theta\) is an isomorphism. The components of \(\theta(a)\) can be computed economically using this formula so as not to slow
down the actual adding process. 



The computation of \(\theta^{-1}\left(s_1,s_2,s_3\right)\) is simplified by the fact that \(\theta^{-1}\) is also an isomorphism. The final sum
is \(s_1\theta^{-1}(1,0,0)+s_2\theta^{-1}(0,1,0)+s_3\theta^{-1}(0,0,1)\). The arithmetic in this expression is in \(\mathbb{Z}_{21600}\) and is
more time consuming. However, as was noted above, it need only be done once. This is why the fast adder is only practical in situations where many
additions must be performed to get a single sum.



For our example, we can use Mathematica{'}s built-in function for inverting \(\theta\):

\begin{doublespace}
\noindent\(\pmb{\textrm{ ChineseRemainder}[\textrm{ distributedSum},\{32,27,25\}]}\)
\end{doublespace}

\begin{doublespace}
\noindent\(2092\)
\end{doublespace}



The result we get is exactly what we get by directly adding in the larger modulus.

\begin{doublespace}
\noindent\(\pmb{\textrm{ Fold}[\textrm{ Mod}[\textrm{ $\#$1}+\textrm{ $\#$2},32\ 27\ 25]\&amp;,0,a]}\)
\end{doublespace}

\begin{doublespace}
\noindent\(2092\)
\end{doublespace}



Notice that if we wanted the conventional sum of integers our list, the result we just arrived at would not be correct.   The relationship between
the integer sum and the modular sum is that they differ by a multiple of the modulus:

\begin{doublespace}
\noindent\(\pmb{\textrm{ Total}[a]}\)
\end{doublespace}

\begin{doublespace}
\noindent\(23692\)
\end{doublespace}

\begin{doublespace}
\noindent\(\pmb{\textrm{ Mod}[\textrm{ Total}[a]-\textrm{ Fold}[\textrm{ Mod}[\textrm{ $\#$1}+\textrm{ $\#$2},32\ 27\ 25]\&amp;,0,a],32\ 27\ 25]}\)
\end{doublespace}

\begin{doublespace}
\noindent\(0\)
\end{doublespace}



To further illustrate the potential of fast adders, consider the problem of addition modulo 



\(n=2^53^35^27^211\cdot 13\cdot 17\cdot 19\cdot 23\cdot 29\cdot 31\cdot 37\cdot 41\cdot 43\cdot 47\approx 3.1\times 10^{21}\)



<p>Each addition using the usual modulo <m>n</m> addition with full adders would take 72 time units. By decomposing each summand into 15-tuples according
to the CRT, the time is reduced to \(\left\lceil \log _249\right\rceil =6\) time units per addition.</p>


<exercises xml:id="exercises-15-1">
<title>Exercises for Section 15.1</title>
<exercisegroup>
<introduction><p>A Exercises</p></introduction>
<exercise number="1"><statement><p> What generators besides 1 does \([\mathbb{Z}, +]\) have?</p></statement></exercise>
<exercise number="2"><statement><p>  Without doing any multiplications, determine the number of generators of  \([\mathbb{Z}_{11}, +_{11}]\).</p></statement></exercise>
<exercise number="3"><statement><p> Prove that if \(\lvert G\rvert >2\) and <m>G</m> is cyclic, <m>G</m> has at least two generators.</p></statement></exercise>
<exercise number="4"><statement><p>  If you wanted to list the generators of \(\mathbb{Z}_n\) you would only have to test the first \(n/2\) positive integers. Why?</p></statement></exercise>
<exercise number="5"><statement><p>  Which of the following groups are cyclic? Explain.
<ol label="a">
<li><p> \([\mathbb{Q}, +]\)</p></li>
<li><p>  \([\mathbb{R}^+,\cdot ]\)</p></li>
<li><p> \([6\mathbb{Z}, +]\) where \(6\mathbb{Z} = \{6n |n \in  \mathbb{Z}\}\)</p></li>
<li><p> \(\mathbb{Z} \times  \mathbb{Z}\)</p></li>
<li><p> \(\mathbb{Z}_2\times  \mathbb{Z}_3 \times  \mathbb{Z}_{25}\)</p></li>
</ol></p></statement></exercise>
<exercise number="6"><statement> <p> For each group and element, determine the order of the cyclic subgroup generated by the element:
<ol label="a">
<li><p>  \(\mathbb{Z}_{25}\) , 15
</p></li>
<li><p> \(\mathbb{Z}_4\times \mathbb{Z}_9\) , \((2, 6)\) (apply Exercise 8)
</p></li>
<li><p>  \(\mathbb{Z}_{64}\) , 2</p></li>
</ol></p></statement></exercise>
</exercisegroup>
<exercisegroup>
<introduction><p>B Exercises</p></introduction>
<exercise number="7"><statement><p>  How can Theorem 15.1.4 be applied to list the generators of \(\mathbb{Z}_n\)? What are the generators of \(\mathbb{Z}_{25}\)? Of \(\mathbb{Z}_{256}\)?</p></statement></exercise>
<exercise number="8"><statement><p>  Prove that if the greatest common divisor of <m>n</m> and <m>m</m> is 1, then (1, 1) is a generator of \(\mathbb{Z}_n\times \mathbb{Z}_m\), and, hence, \(\mathbb{Z}_n\times \mathbb{Z}_m\) is isomorphic to  \(\mathbb{Z}_{n m}\).</p></statement></exercise>
<exercise number="9"><statement><p><ol label="a">
<li><p>Illustrate how the fast adder can be used to add the numbers 21, 5, 7, and 15 using the isomorphism between \(\mathbb{Z}_{77}\) and \(\mathbb{Z}_7\times \mathbb{Z}_{11}\). </p></li>
<li><p> If the same isomorphism is used to add the numbers 25, 26, and 40, what would the result be, why would it be incorrect, and how would the answer differ from the answer in part a?</p></li>
</ol>
</p>
</statement></exercise>
<exercise number="10"><statement><p>   Prove that if G . is a cyclic group of order n . with generator <m>a</m>, and\(p, q \in  \{0, 1, \ldots , n - 1\}\), then \((p+q)a = \left(p+_nq\right)a\) </p></statement></exercise>
</exercisegroup>
</exercises>
</section>