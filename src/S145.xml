<?xml version="1.0" encoding="UTF-8" ?>
<section xml:id="s-The Machine of a Monoid">
<title>The Machine of a Monoid</title>
<index><main>The Machine of a Monoid</main></index>



Any finite monoid \([M,*]\) can be represented in the form of a finite-state machine with input and state sets equal to<m>M</m>. The output of
the machine will be ignored here, since it would echo the current state of the machine. Machines of this type are called \textit{
state machines}. It can be shown that whatever can be done with a finite-state machine can be done with a state machine; however, there is a trade-off.
Usually, state machines that perform a specific function are more complex than general finite-state machines.



\pmb{ Definition:} Machine of a Monoid. If . \([M,*]\)\textit{  is a finite monoid, then the machine of M, denoted m(M), is the state machine
with state set M, input set M, and next-state function }\(t : M\times M \to M\) defined by . \(t(s, x) = s * x\).. 

<example xml:id="ex-14.5.1."><title>14.5.1.</title><p></p></example> We will construct the machine of the monoid \(\left[\mathbb{Z}_2;+_2\right]\). As mentioned above, the state set and the input
set are both \(\mathbb{Z}_2\). The next state function is defined by \(t(s, x) = s +_2\text x\). The transition diagram for \(m\left(\mathbb{Z}_2\right)\)
appears in Figure 14.5.1. Note how it is identical to the transition diagram of the parity checker, which has an associated monoid that was isomorphic
to \(\left[\mathbb{Z}_2,+_2\right].\)


\begin{center}\(\)
\end{center}


\caption{\pmb{ Figure 14.5.1}}

<example xml:id="ex-14.5.2. "><title>14.5.2. </title><p></p></example>The transition diagram of the monoids \(\left[\mathbb{Z}_2,\times _2\right]\) and \(\left[\mathbb{Z}_3,\times _3\right]\)
appear in Figure 14.5.2.


\begin{center}\(\begin{array}{cc}
  &amp;  \\
\end{array}\)
\end{center}


\caption{\pmb{ Figure 14.5.2}}

<example xml:id="ex-14.5.3."><title>14.5.3.</title><p></p></example> Let <m>U</m> be the monoid that we obtained from the unit-time delay machine (Example 14.4.3). We have seen that the machine
of the monoid of the parity checker is essentially the parity checker. Will we obtain a unit-time delay machine when we construct the machine of
<m>U</m>?\textit We can't expect to get exactly the same machine because the unit-time delay machine is not a state machine and the machine
of a monoid is a state machine. However, we will see that our new machine is capable of telling us what input was received in the previous time period.
The operation table for the monoid serves as a table to define the transition function for the machine. The row headings are the state values, while
the column headings are the inputs. If we were to draw a transition diagram with all possible inputs, the diagram would be too difficult to read.
Since <m>U</m> is generated by the two elements, \(T_0\) and \(T_1\), we will include only those inputs. Suppose that we wanted to read the transition
function for the input \(T_{01}\). Since \(T_{01}=T_0T_1\), in any state \(s, t\left(s, T_{01}\right) = t\left(t\left(s, T_0\right), T_1\right).\)
The transition diagram appears in Figure 14.5.3.


\begin{center}\(\)
\end{center}


\caption{\pmb{ Figure 14.5.3}}

If we start reading a string of 0s and 1s while in state \(T_{\lambda }\) and are in state \(T_{\textrm{ \textit{ab}}}\) at any one time, the input
from the previous time period (not the input that sent us into \(T_{\textrm{ ab}}\), the one before that) is <m>a</m>. In states \(T_{\lambda },
T_0\) and \(T_1\), no previous input exists.


\subsection{
<exercises xml:id="exercises-14-5">
<title>Exercises for Section 14.5</title>
}


</exercisegroup>
<exercisegroup>
<introduction><p>A Exercises</p></introduction>

<exercise number="1"><statement>  Draw the transition diagrams for the machines of the following monoids:

<ol label="a">
<li><p>  \(\left[\mathbb{Z}_4;+_4\right]\)</p></li>
<li><p>   The direct product of  \(\left[\mathbb{Z}_2;\times _2\right]\) with itself.


</exercisegroup>
<exercisegroup>
<introduction><p>B Exercises</p></introduction>
</statement></exercise>
<exercise number="2"><statement>  Even though a monoid may be infinite, we can visualize it as an infinite-state machine provided that it is generated by a finite number of
elements. For example, the monoid B*.  is generated by 0 and 1. A section of its transition diagram can be obtained by allowing input only
from the generating set (Figure 14.5.4a). The monoid of integers under addition is generated by the set $\{$-1, 1$\}$. The transition diagram for
this monoid can be visualized by drawing a small portion of it, as in Figure 14.5.4b.


\begin{center}\(\)
\end{center}



$\quad \quad $(b)


\begin{center}\(\)
\end{center}


\caption{\pmb{ Figure 14.5.4}}

<ol label="a">
<li><p>  Draw a transition diagram for $\{$a, b, c$\. $*}.</p></li>
<li><p>  Draw a transition diagram for \([\mathbb{Z}\times \mathbb{Z},\textrm{ componentwise} \textrm{ addition}]\).
</p></statement></exercise>
</exercises>
</section>
