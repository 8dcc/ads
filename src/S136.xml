<?xml version="1.0" encoding="UTF-8"?>
<section xml:id="s-Boolean Expressions">
<title>Boolean Expressions</title>
<index><main>Boolean Expressions</main></index>



In this section, we will use our background from the previous sections and set theory to develop a procedure for simplifying Boolean expressions.
This procedure has considerable application to the simplification of circuits in switching theory or logical design.



<subsubsection xml:id="sss-Definition:"><title>Definition:</title><index><main>Definition:</main></index> Boolean Expression. Let.  \([B; -, \lor , \land ]\) be any Boolean algebra..  Let . \(x_1, x_2,
\ldots , x_k\) be variables in B; that is, variables that can assume values from B. A Boolean expression generated.  by.  \(x_1,
x_2, \ldots , x_k\) is any valid combination of the . \(x_i\) and the elements of B with the operations of meet, join, and complementation.. 



This definition, as expected, is the analog of the definition of a proposition generated by a set of propositions, presented in Section 3.2.



Each Boolean expression generated by <m>k</m> variables, \(e\left(x_1, \ldots , x_k\right)\), defines a function \(f: B^k\to B\) where \(f\left(a_1,
\ldots , a_k\right)=e\left(a_1, \ldots , a_k\right)\). If <m>B</m> is a finite Boolean algebra, then there are a finite number of functions from
\(B^k\) into <m>B</m>. Those functions that are defined in terms of Boolean expressions are called Boolean functions. . As we will see,
there is an infinite number of Boolean expressions that define each Boolean function. Naturally, the <q>shortest</q> of these expressions will be
preferred. Since electronic circuits can be described as Boolean functions with \(B=B_2\) , this economization is quite useful.



<subsubsection xml:id="sss-Example 13.6.1."><title>Example 13.6.1.</title><index><main>Example 13.6.1.</main></index> Consider any Boolean algebra \([B; -, \lor , \land ]\) of order 2. How many functions \(f:B^2\to B\) are there? First,
all Boolean algebras of order 2 are isomorphic to \(\left[B_2; -, \lor , \land \right]\) so we want to determine the number of functions \(f:B_2^2\to
B_2\). If we consider a Boolean function of two variables, \(x_1\) and \(x_2\), we note that each variable has two possible values 0 and 1, so there
are \(2^2\) ways of assigning these two values to the \(k=2\) variables. Hence, the table below has \(2^2=4\) rows. So far we have a table such as
that labeled 13.6.1.



\(\begin{array}{c|cc}
 x_1 &amp; x_2 &amp; f\left(x_1,x_2\right) \\
\hline
 
\begin{array}{c}
 0 \\
 0 \\
 1 \\
 1 \\
\end{array}
 &amp; 
\begin{array}{c}
 0 \\
 1 \\
 0 \\
 1 \\
\end{array}
 &amp; 
\begin{array}{c}
 ? \\
 ? \\
 ? \\
 ? \\
\end{array}
 \\
\end{array}\)


\caption{

<subsubsection xml:id="sss-\textrm{ Table 13.6.1"><title>\textrm{ Table 13.6.1</title><index><main>\textrm{ Table 13.6.1</main></index>}\textrm{ \\
}

<subsubsection xml:id="sss-\textrm{ General Form Of Boolean Function "><title>\textrm{ General Form Of Boolean Function </title><index><main>\textrm{ General Form Of Boolean Function </main></index>}
\subsubsection{

<subsubsection xml:id="sss-\textrm{ \(f\left(x_1, x_2\right)\)"><title>\textrm{ \(f\left(x_1, x_2\right)\)</title><index><main>\textrm{ \(f\left(x_1, x_2\right)\)</main></index>}}

<subsubsection xml:id="sss-\textrm{  of Example 13.6.1"><title>\textrm{  of Example 13.6.1</title><index><main>\textrm{  of Example 13.6.1</main></index>}}

How many possible different function values \(f\left(x_1, x_2\right)\) can there be? To list a few:\(f_1\left(x_1, x_2\right)=x_1\), \(f_2\left(x_1,
x_2\right)=x_2\), \(f_3\left(x_1, x_2\right)=x_1\lor x_2\), \(f_4\left(x_1, x_2\right)=\left(x_1\land \overline{x_2}\right)\lor x_2\), \(f_5\left(x_1,
x_2\right)= x_1\land x_2\lor \overline{x_2}\),  etc. Each of these will give a table like that of Table 13.6.1. The tables for \(f_1\textrm{ }\),
and \(f_3\) appear in Table 13.6.2.



\(\begin{array}{c|cc}
 x_1 &amp; x_2 &amp; f_1\left(x_1,x_2\right) \\
\hline
 
\begin{array}{c}
 0 \\
 0 \\
 1 \\
 1 \\
\end{array}
 &amp; 
\begin{array}{c}
 0 \\
 1 \\
 0 \\
 1 \\
\end{array}
 &amp; 
\begin{array}{c}
 0 \\
 0 \\
 1 \\
 1 \\
\end{array}
 \\
\end{array}\)$\quad \quad $\(\begin{array}{c|cc}
 x_1 &amp; x_2 &amp; f_3\left(x_1,x_2\right) \\
\hline
 
\begin{array}{c}
 0 \\
 0 \\
 1 \\
 1 \\
\end{array}
 &amp; 
\begin{array}{c}
 0 \\
 1 \\
 0 \\
 1 \\
\end{array}
 &amp; 
\begin{array}{c}
 0 \\
 1 \\
 1 \\
 1 \\
\end{array}
 \\
\end{array}\)


\caption{

<subsubsection xml:id="sss-\textrm{ Table 13.6.2"><title>\textrm{ Table 13.6.2</title><index><main>\textrm{ Table 13.6.2</main></index>}\textrm{ \\
}

<subsubsection xml:id="sss-\textrm{ Boolean Functions "><title>\textrm{ Boolean Functions </title><index><main>\textrm{ Boolean Functions </main></index>}
\subsubsection{

<subsubsection xml:id="sss-\textrm{ \(f_1\)"><title>\textrm{ \(f_1\)</title><index><main>\textrm{ \(f_1\)</main></index>}}

<subsubsection xml:id="sss-\textrm{  and "><title>\textrm{  and </title><index><main>\textrm{  and </main></index>}
\subsubsection{

<subsubsection xml:id="sss-\textrm{ \(f_3\)"><title>\textrm{ \(f_3\)</title><index><main>\textrm{ \(f_3\)</main></index>}}

<subsubsection xml:id="sss-\textrm{  of Example 13.6.1"><title>\textrm{  of Example 13.6.1</title><index><main>\textrm{  of Example 13.6.1</main></index>}}

Two functions are different if and only if their tables (values) are different for at least one row.  Of course by using the basic laws of Boolean
algebra we can see that \(f_3=f_4\). Why? So if we simply list by brute force all <q>combinations</q> of \(x_1 \textrm{ and} x_2\) we will obtain unnecessary
duplication. However, we note that for any combination of the variables \(x_1\), and \(x_2\) there are only two possible values for \(f\left(x_1,
x_2\right)\), namely 0 or 1. Thus, we could write \(2^4=16\) different functions on 2 variables.



Now let's count the number of different Boolean functions in a more general setting. We will consider two cases: first, when \(B=B_2\) , and second,
when \(B\) is any finite Boolean algebra with \(2^n\) elements.



Let \(B=B_2\). Each function \(f:B^k\to B\) is defined in terms of a table having \(2^k\) rows. Therefore, since there are two possible images for
each element of \(B^k\), there are 2 raised to the \(2^k\), or  \(2^{2^k}\) different functions. \textit{  We claim that every one of these functions
is a Boolean function.}



Now suppose that \(\left| B\right| =2^n>2\). A function from \(B^k\) into \(B\) can still be defined in terms of a table. There are \(\left| B\right|
^k\) rows to each table and \(\left| B\right|\) possible images for each row. Therefore, there are \(2^n\) raised to the power \(2^{\textrm{ \textit{nk}}}\)
different functions. If \(n>1\), then not every one of these functions is a Boolean function.  Notice that in counting the numbers of functions
we are applying the result of  Exercise 5 of Section 7.1. 



Since all Boolean algebras are isomorphic to a Boolean algebra of sets, the analogues of statements in sets are useful in Boolean algebras.



<subsubsection xml:id="sss-Definition:"><title>Definition:</title><index><main>Definition:</main></index> Minterm. A Boolean expression generated by . \(x_1, x_2, \ldots , x_k\) that has the form. 

\(\underset{i=1}{\overset{k}{\land }}y_i,\)

where each.  \(y_i\) may be either.  \(x_i\) or \(\overline{x_i}\) is.  called a minterm generated by.  \(x_1, x_2,
\ldots , x_k\).



By a direct application of the Product Rule we see that there are \(2^k\) different minterms generated by \(x_1, \ldots , x_k\).



<subsubsection xml:id="sss-Definition:"><title>Definition:</title><index><main>Definition:</main></index> Minterm Normal Form. A Boolean expression generated by . \(x_1, \ldots , x_k\). \textit{  is in minterm
normal form if it is the join of expressions of the form }\(a\land m\). , where . \(a\in B\).  and m is a minterm. 
generated by \(x_1, \ldots , x_k\). That is, it is of the form. 

\(\underset{j=1}{\overset{p}{\lor }}\left(a_j\land m_j\right),\)

where . \(p=2^k\).  and . \(m_1,m_2, \ldots , m_p\).  are the minterms generated by . \textit{ \(x_1, \ldots
, x_k\)}



If \(B=B_2\), then each \(a_j\) in a minterm normal form is either 0 or 1. Therefore, \(a_j\land m_j\) is either 0 or \(m_j\).



<subsubsection xml:id="sss-Theorem 13.6.1. "><title>Theorem 13.6.1. </title><index><main>Theorem 13.6.1. </main></index> Let . \(e\left(x_1,\ldots , x_k\right)\). \textit{  be a Boolean expression over B. There exists
a unique minterm normal form }\(M\left(x_1, \ldots , x_k\right)\).  that is equivalent to . \(e\left(x_1, \ldots , x_k\right)\). \textit{
 in the sense that e and M define the same function from }\(B^k\).  into B.. 



The uniqueness in this theorem does not include the possible ordering of the minterms in <m>M</m> (commonly referred to as <q>uniqueness up to
the order of minterms</q>). The proof of this theorem would be quite lengthy, and not very instructive, so we will leave it to the interested reader
to attempt. The implications of the theorem are very interesting, however.



If \(\left| B\right| =2^n\), then there are \(2^n\) raised to the \(2^k\) different minterm normal forms. Since each different minterm normal form
defines a different function, there are a like number of Boolean functions from \(B^k\) into <m>B</m>.  If \(B=B_2\), there are as many Boolean
functions (2 raised to the \(2^k\)) as there are functions from \(B^k\) into <m>B</m>, since there are \(2\) raised to the \(2^{\textrm{ \textit{$n$}}}\)
functions from \(B^k\) into <m>B</m>.  The significance of this result is that any desired function can be obtained using electronic circuits
having 0 or 1 (off or on, positive or negative) values, but more complex, multivalued circuits would not have this flexibility.



We will close this section by examining minterm normal forms for expressions over \(B_2\) , since they are a starting point for circuit economization.





<subsubsection xml:id="sss-Example 13.6.2."><title>Example 13.6.2.</title><index><main>Example 13.6.2.</main></index> Consider the Boolean expression \(f\left(x_1\right.\), \(\left.x_2\right)=x_1\lor \overline{x_2}\). One method of
determining the minterm normal form of <m>f</m> is to think in terms of sets. Consider the diagram with the usual translation of notation in Figure
13.6.1. Then \(f\left(x_1, x_2\right)=\left(\overline{x_1}\land \overline{x_2}\right)\lor \left(x_1\land \overline{x_2}\right)\lor \left(x_1\land
x_2\right)\).


\begin{center}\(\)
\end{center}


\caption{Figure 13.6.1}





<subsubsection xml:id="sss-Example 13.6.3."><title>Example 13.6.3.</title><index><main>Example 13.6.3.</main></index> Consider the function \(f:B_2^3\to B_2\) defined by Table 13.6.3. The minterm normal form for <m>f</m> can be
obtained by taking the join of minterms that correspond to rows that have an image value of 1. If \(f\left(a_1, a_2, a_3\right)=1\), then include
the minterm \(y_1\land y_2\land y_3\) where



\(y_j=\begin{cases}
 x_j &amp; \textrm{ if} a_j=1 \\
 \overset{---}{x_j} &amp; \textrm{ if} a_j=0
\end{cases}\)





<subsubsection xml:id="sss-TABLE 13.6.3"><title>TABLE 13.6.3</title><index><main>TABLE 13.6.3</main></index>





<subsubsection xml:id="sss-Boolean Function of "><title>Boolean Function of </title><index><main>Boolean Function of </main></index>
\subsubsection{

<subsubsection xml:id="sss-\(f\left(a_1, a_2, a_3\right)\)"><title>\(f\left(a_1, a_2, a_3\right)\)</title><index><main>\(f\left(a_1, a_2, a_3\right)\)</main></index>}

<subsubsection xml:id="sss- Of Example 13.6.3"><title> Of Example 13.6.3</title><index><main> Of Example 13.6.3</main></index>



\(\begin{array}{c|c}
 a_1a_2a_3 &amp; f\left(a_1, a_2, a_3\right) \\
\hline
 0\textrm{    }0\textrm{    }00\textrm{    }0\textrm{    }10\textrm{    }1\textrm{    }00\textrm{    }1\textrm{    }11\textrm{    }0\textrm{    }01\textrm{    }0\textrm{    }11\textrm{ 
  }1\textrm{    }01\textrm{    }0\textrm{    }1 &amp; 10010010 \\
\end{array}\)



Therefore,



\(f\left(x_1, x_2, x_3\right)=\left(\overline{x_1}\land \overline{x_2}\land \overline{x_3}\right)\lor \left(\overline{x_1}\land x_2\land
x_3\right)\lor \left(x_1\land x_2\land \overline{x_3}\right)\).



The minterm normal form is a first step in obtaining an economical way of expressing a given Boolean function. For functions of more than three variables,
the above set theory approach tends to be awkward. Other procedures are used to write the normal form. The most convenient is the Karnaugh map, a
discussion of which can be found in any logical design/switching theory text (see, for example, Hill and Peterson).




<exercises xml:id="exercises-13-6">
<title>Exercises for Section 13.6</title>




A Exercises

<exercise number="1"><statement> (a) Write the 16 possible functions of Example 13.6.1. (Hint:.  Find all possible joins of minterms generated by \(x_1\) and \(x_2\) .)</p></li>
<li><p> Write out the tables of several of the above Boolean functions to show that they are indeed different.</p></li>
<li><p> Determine the minterm normal form of



\(f_1\left(x_1, x_2\right)=x_1\lor x_2,\)



\(f_2\left(x_1, x_2\right)=\overline{x_1}\lor \overline{x_2}\)



\(f_3\left(x_1, x_2\right)=0, f_4\left(x_1, x_2\right)=1.\)
</statement></exercise>
<exercise number="2"><statement> Consider the Boolean expression \(f\left(x_1, x_2, x_3\right)=\left(\overline{x_3}\land x_2\right)\)\(\lor\)\(\left(\overline{x_1}\land x_3\right)\)$\lor
$\(\left(x_2\land x_3\right)\) on \(\left[B_2; -, \lor , \land \right].\)

<ol label="a">
<li><p> Simplify this expression using basic Boolean algebra laws.</p></li>
<li><p> Write this expression in minterm normal form.</p></li>
<li><p> Write out the table for the given function defined by <m>f</m> and compare it to the tables of the functions in parts a and b.</p></li>
<li><p> How many possible different functions in three variables on \(\left[B_2; -, \lor , \land \right]\) are there?



B Exercise
</statement></exercise>
<exercise number="3"><statement> Let \([B; -, \lor , \land ]\) be a Boolean algebra of order 4, and let <m>f</m> be a Boolean function of two variables on <m>B</m>.

<ol label="a">
<li><p> How many elements are there in the domain of f . ?</p></li>
<li><p> How many different Boolean functions are there of two, variables? Three variables?</p></li>
<li><p> Determine the minterm normal form of \(f\left(x_1, x_2\right)=x_1\lor x_2\).</p></li>
<li><p> If \(B=\{0, a, b, 1\}\), define a function from \(B^2\) into <m>B</m> that is not a Boolean function.

